{"singlePage": [], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "pinyin", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "\u5b50\u6b63\u535a\u5ba2", "subTitle": "\u5b50\u6b63\u535a\u5ba2", "avatarUrl": "https://avatars.githubusercontent.com/u/15809315?v=4", "GMEEK_VERSION": "last", "postListJson": {"P2": {"htmlDir": "docs/post/ru-he-li-yong-dotnet maui CollectionView-shi-xian-liao-tian-ye-mian.html", "labels": ["documentation"], "postTitle": "\u5982\u4f55\u5229\u7528dotnet maui CollectionView\u5b9e\u73b0\u804a\u5929\u9875\u9762", "postUrl": "post/ru-he-li-yong-dotnet%20maui%20CollectionView-shi-xian-liao-tian-ye-mian.html", "postSourceUrl": "https://github.com/Abner1995/Abner1995.github.io/issues/2", "commentNum": 0, "wordCount": 6500, "description": "**MessageDetailPage.xaml**\r\n\r\n```\r\n<?xml version='1.0' encoding='utf-8' ?>\r\n<ContentPage\r\n    x:Class='ContactSMS.Client.Views.MessageDetailPage'\r\n    xmlns='http://schemas.microsoft.com/dotnet/2021/maui'\r\n    xmlns:x='http://schemas.microsoft.com/winfx/2009/xaml'\r\n    xmlns:model='clr-namespace:ContactSMS.Client.Models'\r\n    xmlns:templates='clr-namespace:ContactSMS.Client.Views.Templates'\r\n    xmlns:vm='clr-namespace:ContactSMS.Client.ViewModels'\r\n    Title='\u6d88\u606f\u8be6\u60c5'\r\n    x:DataType='vm:MessageViewModel'>\r\n\r\n    <ContentPage.Resources>\r\n        <ResourceDictionary>\r\n\r\n            <DataTemplate x:Key='ReceiverChatMessageItemTemplate' x:DataType='model:MessageDetailModel'>\r\n                <templates:ReceiverChatMessageItemTemplate />\r\n            </DataTemplate>\r\n\r\n            <DataTemplate x:Key='SenderChatMessageItemTemplate' x:DataType='model:MessageDetailModel'>\r\n                <templates:SenderChatMessageItemTemplate />\r\n            </DataTemplate>\r\n\r\n            <templates:MessageDataTemplateSelector\r\n                x:Key='MessageDataTemplateSelector'\r\n                ReceiverMessageTemplate='{StaticResource ReceiverChatMessageItemTemplate}'\r\n                SenderMessageTemplate='{StaticResource SenderChatMessageItemTemplate}' />\r\n\r\n            <Style x:Key='ChatCollectionStyle' TargetType='CollectionView'>\r\n                <Setter Property='Margin' Value='20' />\r\n            </Style>\r\n        </ResourceDictionary>\r\n    </ContentPage.Resources>\r\n\r\n\r\n    <ScrollView>\r\n\r\n        <CollectionView\r\n            ItemTemplate='{StaticResource MessageDataTemplateSelector}'\r\n            ItemsSource='{Binding Messages}'\r\n            Style='{StaticResource ChatCollectionStyle}' />\r\n\r\n    </ScrollView>\r\n\r\n\r\n</ContentPage>\r\n```\r\n\r\n**SenderChatMessageItemTemplate**\r\n\r\n```\r\n<?xml version='1.0' encoding='utf-8' ?>\r\n<ContentView\r\n    x:Class='ContactSMS.Client.Views.Templates.SenderChatMessageItemTemplate'\r\n    xmlns='http://schemas.microsoft.com/dotnet/2021/maui'\r\n    xmlns:x='http://schemas.microsoft.com/winfx/2009/xaml'\r\n    xmlns:model='clr-namespace:ContactSMS.Client.Models'\r\n    x:DataType='model:MessageDetailModel'>\r\n\r\n    <ContentView.Resources>\r\n        <ResourceDictionary>\r\n            <Style x:Key='SenderContainerStyle' TargetType='Grid'>\r\n                <Setter Property='HorizontalOptions' Value='End' />\r\n                <Setter Property='Margin' Value='0,15' />\r\n            </Style>\r\n\r\n            <Style x:Key='MessageTextStyle' TargetType='Label'>\r\n                <Setter Property='FontSize' Value='14' />\r\n                <Setter Property='TextColor' Value='Black' />\r\n                <Setter Property='Padding' Value='10' />\r\n            </Style>\r\n\r\n            <Color x:Key='MessageColor'>#D8E9F1</Color>\r\n\r\n            <Style x:Key='MessageShapeStyle' TargetType='BoxView'>\r\n                <Setter Property='Color' Value='{StaticResource MessageColor}' />\r\n                <Setter Property='CornerRadius' Value='24, 0, 24, 24' />\r\n            </Style>\r\n\r\n            <Style x:Key='MessageTimeStyle' TargetType='Label'>\r\n                <Setter Property='TextColor' Value='#A5A4A9' />\r\n                <Setter Property='HorizontalOptions' Value='End' />\r\n                <Setter Property='Margin' Value='0,5,0,0' />\r\n            </Style>\r\n\r\n        </ResourceDictionary>\r\n    </ContentView.Resources>\r\n\r\n    <Grid RowDefinitions='*,20' Style='{StaticResource SenderContainerStyle}'>\r\n        <Grid>\r\n            <BoxView Style='{StaticResource MessageShapeStyle}' />\r\n            <Label Style='{StaticResource MessageTextStyle}' Text='{Binding Content}' />\r\n        </Grid>\r\n        <Label\r\n            Grid.Row='1'\r\n            Style='{StaticResource MessageTimeStyle}'\r\n            Text='{Binding Date}' />\r\n    </Grid>\r\n\r\n</ContentView>\r\n```\r\n\r\n**ReceiverChatMessageItemTemplate.xaml**\r\n\r\n```\r\n<?xml version='1.0' encoding='utf-8' ?>\r\n<ContentView\r\n    x:Class='ContactSMS.Client.Views.Templates.ReceiverChatMessageItemTemplate'\r\n    xmlns='http://schemas.microsoft.com/dotnet/2021/maui'\r\n    xmlns:x='http://schemas.microsoft.com/winfx/2009/xaml'\r\n    xmlns:model='clr-namespace:ContactSMS.Client.Models'\r\n    x:DataType='model:MessageDetailModel'>\r\n\r\n    <ContentView.Resources>\r\n        <ResourceDictionary>\r\n            <Style x:Key='ReceiverContainerStyle' TargetType='Grid'>\r\n                <Setter Property='HorizontalOptions' Value='Start' />\r\n            </Style>\r\n\r\n            <Style x:Key='MessageTextStyle' TargetType='Label'>\r\n                <Setter Property='FontSize' Value='14' />\r\n                <Setter Property='TextColor' Value='Black' />\r\n                <Setter Property='Padding' Value='10' />\r\n                <Setter Property='Margin' Value='0,0,0,5' />\r\n            </Style>\r\n\r\n            <Color x:Key='MessageColor'>#9297A1</Color>\r\n\r\n            <Style x:Key='MessageShapeStyle' TargetType='BoxView'>\r\n                <Setter Property='Color' Value='{StaticResource MessageColor}' />\r\n                <Setter Property='CornerRadius' Value='0, 24, 24, 24' />\r\n            </Style>\r\n\r\n            <Style x:Key='MessageTimeStyle' TargetType='Label'>\r\n                <Setter Property='TextColor' Value='#A5A4A9' />\r\n                <Setter Property='HorizontalOptions' Value='Start' />\r\n                <Setter Property='Margin' Value='0,5,0,0' />\r\n            </Style>\r\n\r\n        </ResourceDictionary>\r\n    </ContentView.Resources>\r\n\r\n    <Grid RowDefinitions='*,20' Style='{StaticResource ReceiverContainerStyle}'>\r\n        <Grid>\r\n            <BoxView Style='{StaticResource MessageShapeStyle}' />\r\n            <Label Style='{StaticResource MessageTextStyle}' Text='{Binding Content}' />\r\n        </Grid>\r\n        <Label\r\n            Grid.Row='1'\r\n            Style='{StaticResource MessageTimeStyle}'\r\n            Text='{Binding Date}' />\r\n    </Grid>\r\n\r\n</ContentView>\r\n```\r\n\r\n**MessageDataTemplateSelector.cs \u5fc5\u987b\u8981\u662fpublic\uff0c**\r\n\r\n```\r\nnamespace ContactSMS.Client.Views.Templates\r\n{\r\n    public class MessageDataTemplateSelector : DataTemplateSelector\r\n    {\r\n        public DataTemplate SenderMessageTemplate { get; set; }\r\n        public DataTemplate ReceiverMessageTemplate { get; set; }\r\n\r\n        protected override DataTemplate OnSelectTemplate(object item, BindableObject container)\r\n        {\r\n            var message = (MessageDetailModel)item;\r\n\r\n            if (message.UserId == 0)\r\n                return ReceiverMessageTemplate;\r\n\r\n            return SenderMessageTemplate;\r\n        }\r\n    }\r\n}\r\n```\u3002", "top": 0, "createdAt": 1725071818, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "createdDate": "2024-08-31", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/dotnet WebAPI JWT-shi-yong.html", "labels": ["documentation"], "postTitle": "dotnet WebAPI JWT\u4f7f\u7528", "postUrl": "post/dotnet%20WebAPI%20JWT-shi-yong.html", "postSourceUrl": "https://github.com/Abner1995/Abner1995.github.io/issues/3", "commentNum": 0, "wordCount": 11434, "description": "# JWT  \r\n\r\n## \u5173\u952e\u8bcd  \r\n```shell  \r\nBearer\r\n```  \r\n\r\n## \u5305\r\n```bash  \r\nMicrosoft.IdentityModel.Tokens  \r\nSystem.IdentityModel.Tokens.Jwt  \r\nSwashbuckle.AspNetCore.Filters  \r\nMicrosoft.AspNetCore.Authentication.JwtBearer  \r\nMicrosoft.AspNetCore.Http.Abstractions  \r\n```  \r\n\r\n## dotnet user-jwts CLI\r\n```shell  \r\ndotnet user-jwts create  \r\ndotnet user-jwts print xxx --show-all    \r\ndotnet user-jwts key     \r\ndotnet user-jwts list    \r\n```  \r\n\r\n## \u5982\u4f55\u4f7f\u7528\uff1f  \r\n\r\n**appsettings.json**  \r\n\r\n```json  \r\n{\r\n  'TokenSettings': {\r\n    'Token': 'b28f1a6d8c9eac301db2ef745601948e59c0b5d7a40c29f5d0a2c7b6f3d3e8f5'\r\n  }\r\n}\r\n```  \r\n\r\n**TokenService.cs**  \r\n\r\n```csharp  \r\nusing Microsoft.IdentityModel.Tokens;\r\nusing System.IdentityModel.Tokens.Jwt;\r\nusing System.Security.Claims;\r\nusing System.Security.Cryptography;\r\nusing System.Text;\r\n\r\nnamespace ContactSMS.WebAPI.Common\r\n{\r\n    public class TokenService\r\n    {\r\n        private readonly IConfiguration _configuration;\r\n\r\n        public TokenService(IConfiguration configuration)\r\n        {\r\n            _configuration = configuration;\r\n        }\r\n\r\n        public string GenerateAccessToken(IEnumerable<Claim> claims)\r\n        {\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\r\n                _configuration.GetSection('TokenSettings:Token').Value!));\r\n\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha512Signature);\r\n\r\n            var token = new JwtSecurityToken(\r\n                    claims: claims,\r\n                    expires: DateTime.Now.AddDays(1),\r\n                    signingCredentials: creds\r\n                );\r\n\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n\r\n        public string GenerateRefreshToken(string id)\r\n        {\r\n            var claims = new[]\r\n            {\r\n                new Claim(ClaimTypes.Name, id)\r\n            };\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\r\n               _configuration.GetSection('TokenSettings:Token').Value!));\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha512Signature);\r\n            var token = new JwtSecurityToken(\r\n                claims: claims,\r\n                expires: DateTime.UtcNow.AddDays(7), // \u5237\u65b0\u4ee4\u724c\u6709\u6548\u671f 7 \u5929\r\n                signingCredentials: creds);\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n\r\n        /// <summary>\r\n        /// \u4ece\u8fc7\u671f\u7684\u4ee4\u724c\u4e2d\u83b7\u53d6\u7528\u6237\u4fe1\u606f\r\n        /// </summary>\r\n        /// <param name='token'></param>\r\n        /// <returns></returns>\r\n        /// <exception cref='SecurityTokenException'></exception>\r\n        public ClaimsPrincipal GetPrincipalFromExpiredToken(string token)\r\n        {\r\n            var tokenValidationParameters = new TokenValidationParameters\r\n            {\r\n                ValidateIssuerSigningKey = false,\r\n                ValidateAudience = false,\r\n                ValidateIssuer = false,\r\n                IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\r\n               _configuration.GetSection('TokenSettings:Token').Value!)),\r\n                ValidateLifetime = false // \u8fd9\u91cc\u4e0d\u9a8c\u8bc1\u751f\u547d\u5468\u671f\r\n            };\r\n\r\n            var tokenHandler = new JwtSecurityTokenHandler();\r\n            var principal = tokenHandler.ValidateToken(token, tokenValidationParameters, out var securityToken);\r\n\r\n            if (securityToken is not JwtSecurityToken jwtSecurityToken ||\r\n                !jwtSecurityToken.Header.Alg.Equals(SecurityAlgorithms.HmacSha512Signature, StringComparison.InvariantCultureIgnoreCase))\r\n            {\r\n                throw new SecurityTokenException('Invalid token');\r\n            }\r\n\r\n            return principal;\r\n        }\r\n    }\r\n}\r\n```  \r\n\r\n**Program.cs**  \r\n```csharp  \r\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Microsoft.OpenApi.Models;\r\nusing Swashbuckle.AspNetCore.Filters;\r\nusing System.Text;\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\n\r\n// Add services to the container.\r\n\r\nbuilder.Services.AddControllers();\r\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\r\nbuilder.Services.AddEndpointsApiExplorer();\r\nbuilder.Services.AddSwaggerGen(options =>\r\n{\r\n    options.AddSecurityDefinition('oauth2', new OpenApiSecurityScheme\r\n    {\r\n        In = ParameterLocation.Header,\r\n        Name = 'Authorization',\r\n        Type = SecuritySchemeType.ApiKey\r\n    });\r\n\r\n    options.OperationFilter<SecurityRequirementsOperationFilter>();\r\n});\r\n\r\nbuilder.Services.AddAuthentication(options =>\r\n{\r\n    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n}).AddJwtBearer(options =>\r\n{\r\n    options.TokenValidationParameters = new TokenValidationParameters\r\n    {\r\n        ValidateIssuerSigningKey = true,\r\n        ValidateAudience = false,\r\n        ValidateIssuer = false,\r\n        ValidateLifetime = true,\r\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\r\n                builder.Configuration.GetSection('TokenSettings:Token').Value!))\r\n    };\r\n});\r\n\r\nbuilder.Services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();\r\nbuilder.Services.AddSingleton<TokenService>();\r\n\r\nvar app = builder.Build();\r\n\r\n// Configure the HTTP request pipeline.\r\nif (app.Environment.IsDevelopment())\r\n{\r\n    app.UseSwagger();\r\n    app.UseSwaggerUI();\r\n}\r\n\r\napp.UseHttpsRedirection();\r\n\r\napp.UseAuthentication();\r\n\r\napp.UseAuthorization();\r\n\r\napp.MapControllers();\r\n\r\napp.Run();\r\n``` \r\n\r\n**LoginController.cs**\r\n```csharp  \r\nusing ContactSMS.Commons.Responses;\r\nusing ContactSMS.Commons.Util;\r\nusing ContactSMS.Domain;\r\nusing ContactSMS.Domain.Dto;\r\nusing ContactSMS.Domain.Entity;\r\nusing ContactSMS.WebAPI.Common;\r\nusing ContactSMS.WebAPI.Controllers.Request;\r\nusing ContactSMS.WebAPI.Controllers.Responses;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing System.IdentityModel.Tokens.Jwt;\r\nusing System.Security.Claims;\r\nusing System.Text;\r\n\r\nnamespace ContactSMS.WebAPI.Controllers\r\n{\r\n    [Route('api/[controller]/[action]')]\r\n    [ApiController]\r\n    public class LoginController : ControllerBase\r\n    {\r\n        private readonly ILoginRepository _loginRepository;\r\n        private readonly IUserRepository _userRepository;\r\n        private readonly IConfiguration _configuration;\r\n        private readonly TokenService _tokenService;\r\n\r\n        public LoginController(ILoginRepository loginRepository, IUserRepository userRepository, IConfiguration configuration, TokenService tokenService)\r\n        {\r\n            this._loginRepository = loginRepository;\r\n            this._userRepository = userRepository;\r\n            this._configuration = configuration;\r\n            this._tokenService = tokenService;\r\n        }\r\n\r\n        [HttpPost]\r\n        public async Task<IActionResult> Login([FromBody] LoginRequest loginRequest)\r\n        {\r\n            ServiceResponse<TokenResponse> resp = new ServiceResponse<TokenResponse>();\r\n            if (string.IsNullOrEmpty(loginRequest.UserName) ||\r\n                string.IsNullOrEmpty(loginRequest.PassWord))\r\n            {\r\n                resp.Success = false;\r\n                resp.Message = '\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a';\r\n                return BadRequest(resp);\r\n            }\r\n\r\n            var existingUser = await this._userRepository.GetUserByUserNameAsync(loginRequest.UserName);\r\n            if (existingUser == null)\r\n            {\r\n                resp.Success = false;\r\n                resp.Message = '\u7528\u6237\u6216\u5bc6\u7801\u9519\u8bef';\r\n                return BadRequest(resp);\r\n            }\r\n            bool isVerify = PassWordUtil.VerifyPassword(existingUser.PassWord, loginRequest.PassWord);\r\n            if (!isVerify)\r\n            {\r\n                resp.Success = false;\r\n                resp.Message = '\u5bc6\u7801\u9519\u8bef';\r\n                return BadRequest(resp);\r\n            }\r\n            //string token = CreateToken(existingUser);\r\n            string Id = existingUser.Id.ToString();\r\n            List<Claim> claims = new List<Claim> {\r\n                new Claim(ClaimTypes.NameIdentifier, Id),\r\n                new Claim(ClaimTypes.Name, existingUser.UserName),\r\n            };\r\n            string accessToken = this._tokenService.GenerateAccessToken(claims);\r\n            var refreshToken = _tokenService.GenerateRefreshToken(existingUser.UserName);\r\n            var tokenResponse = new TokenResponse()\r\n            {\r\n                AccessToken = accessToken,\r\n                RefreshToken = refreshToken\r\n            };\r\n            resp.Success = true;\r\n            resp.Message = '\u83b7\u53d6\u6210\u529f';\r\n            resp.Data = tokenResponse;\r\n            return Ok(resp);\r\n        }\r\n    }\r\n}\r\n```  \r\n\r\n**TokenController.cs**  \r\n```csharp  \r\nusing ContactSMS.Commons.Responses;\r\nusing ContactSMS.WebAPI.Common;\r\nusing ContactSMS.WebAPI.Controllers.Request;\r\nusing ContactSMS.WebAPI.Controllers.Responses;\r\nusing Microsoft.AspNetCore.Authorization;\r\nusing Microsoft.AspNetCore.Mvc;\r\n\r\nnamespace ContactSMS.WebAPI.Controllers\r\n{\r\n    [Route('api/[controller]/[action]')]\r\n    [ApiController]\r\n    [Authorize]\r\n    public class TokenController : ControllerBase\r\n    {\r\n        private readonly TokenService _tokenService;\r\n\r\n        public TokenController(TokenService tokenService)\r\n        {\r\n            this._tokenService = tokenService;\r\n        }\r\n\r\n        [HttpPost]\r\n        public IActionResult Refresh([FromBody] RefreshTokenRequest request)\r\n        {\r\n            // \u9a8c\u8bc1\u5237\u65b0\u4ee4\u724c\r\n            //var isValid = ValidateRefreshToken(request.RefreshToken, request.UserName); // \u4f7f\u7528\u65b0\u7684\u5237\u65b0\u4ee4\u724c\u9a8c\u8bc1\u903b\u8f91\r\n\r\n            //if (!isValid)\r\n            //{\r\n            //    return Unauthorized('Invalid refresh token');\r\n            //}\r\n            try\r\n            {\r\n                var principal = _tokenService.GetPrincipalFromExpiredToken(request.AccessToken);\r\n                var username = principal.Identity.Name;\r\n                var newAccessToken = _tokenService.GenerateAccessToken(principal.Claims);\r\n                var newRefreshToken = _tokenService.GenerateRefreshToken(username);\r\n                ServiceResponse<TokenResponse> resp = new ServiceResponse<TokenResponse>();\r\n                var tokenResponse = new TokenResponse()\r\n                {\r\n                    AccessToken = newAccessToken,\r\n                    RefreshToken = newRefreshToken\r\n                };\r\n                resp.Success = true;\r\n                resp.Message = '\u83b7\u53d6\u6210\u529f';\r\n                resp.Data = tokenResponse;\r\n                return Ok(resp);\r\n            }\r\n            catch\r\n            {\r\n                return Unauthorized();\r\n            }\r\n        }\r\n\r\n        private bool ValidateRefreshToken(string refreshToken, string username)\r\n        {\r\n            // \u89e3\u6790\u548c\u9a8c\u8bc1\u5237\u65b0\u4ee4\u724c\r\n            try\r\n            {\r\n                // \u4ece\u5237\u65b0\u4ee4\u724c\u4e2d\u83b7\u53d6\u58f0\u660e\u4fe1\u606f\r\n                var principal = _tokenService.GetPrincipalFromExpiredToken(refreshToken);\r\n\r\n                // \u4ece\u58f0\u660e\u4e2d\u63d0\u53d6\u7528\u6237\u540d\u5e76\u8fdb\u884c\u5339\u914d\r\n                var tokenUsername = principal.Identity?.Name;\r\n\r\n                // \u68c0\u67e5\u4ee4\u724c\u4e2d\u7684\u7528\u6237\u540d\u662f\u5426\u5339\u914d\r\n                return tokenUsername == username;\r\n            }\r\n            catch (Exception)\r\n            {\r\n                // \u5982\u679c\u51fa\u73b0\u5f02\u5e38\uff0c\u8868\u793a\u4ee4\u724c\u65e0\u6548\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}\r\n```  \u3002", "top": 0, "createdAt": 1725182644, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "createdDate": "2024-09-01", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/zai-a-li-yun-fu-wu-qi-CentOS Linux release 7.9.2009-zhong-da-jian-Asterisk-20.9.3\uff0c-bing-xiang-hu-bo-da.html", "labels": ["documentation"], "postTitle": "\u5728\u963f\u91cc\u4e91\u670d\u52a1\u5668CentOS Linux release 7.9.2009\u4e2d\u642d\u5efaAsterisk-20.9.3\uff0c\u5e76\u76f8\u4e92\u62e8\u6253", "postUrl": "post/zai-a-li-yun-fu-wu-qi-CentOS%20Linux%20release%207.9.2009-zhong-da-jian-Asterisk-20.9.3%EF%BC%8C-bing-xiang-hu-bo-da.html", "postSourceUrl": "https://github.com/Abner1995/Abner1995.github.io/issues/4", "commentNum": 0, "wordCount": 2890, "description": "1.  \u66f4\u65b0\u6216\u5b89\u88c5\u8f6f\u4ef6\u5305  \r\n   \r\n    `yum install -y epel-release dmidecode gcc-c++ ncurses-devel libxml2-devel make wget openssl-devel newt-devel kernel-devel sqlite-devel libuuid-devel gtk2-devel jansson-devel binutils-devel libedit libedit-devel`  \r\n\r\n2. \u4e00\u6b65\u4e00\u6b65\u6267\u884c\u4e0b\u9762\u547d\u4ee4  \r\n    `cd /usr/src`  \r\n\r\n    `wget https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-20-current.tar.gz`  \r\n\r\n    `tar -zxvf asterisk-20-current.tar.gz`  \r\n\r\n    `cd asterisk-20.9.3`  \r\n\r\n    `sudo contrib/scripts/install_prereq install`  \r\n\r\n    `./configure --libdir=/usr/lib64 --with-jansson-bundled`  \r\n\r\n    `make menuselect && make && sudo make install && make samples && make config`  \r\n\r\n    `service asterisk start`  \r\n\r\n    `asterisk -rvv`  \r\n\r\n > [!NOTE]  \r\n    1. `./configure --libdir=/usr/lib64 --with-jansson-bundled     (apartir de asterisk 16: --with-jansson-bundled).`  \r\n    2. asterisk-20-current.tar.gz\u4e0b\u8f7d\u5f88\u6162\uff0c\u672c\u5730\u4e0b\u8f7d\u7136\u540eFTP\u4e0a\u4f20  \r\n    3. \u5728configure,\u4e5f\u9700\u8981\u4e0b\u8f7d\u6587\u4ef6\uff0c\u4f46\u662f\u76f4\u63a5\u4e0b\u8f7d\u4f1a\u6162\uff0c\u6240\u4ee5\u672c\u5730\u4e0b\u8f7d\u7136\u540eFTP\u4e0a\u4f20\r\n\r\n3. \u5f00\u59cb\u914d\u7f6easterisk  \r\n\r\n    `cd /etc/asterisk`  \r\n\r\n    `mv sip.conf.sample sip.conf`  \r\n\r\n    ```conf\r\n    [general]\r\n    context=default\r\n    nat=force_rport,comedia\r\n    videosupport=yes\r\n    extern_ip=x.x.x. ; \u4f60\u7684\u516c\u5171 IP \u5730\u5740\r\n    local_net=192.168.1.0/255.255.255.0 ; \u4f60\u7684\u672c\u5730\u7f51\u7edc\uff08\u4f8b\u5982\uff0c192.168.1.0/255.255.255.0\uff09\r\n\r\n    [6001]\r\n    type=user\r\n    context=from-internal\r\n    host=dynamic\r\n    secret=6001\r\n    disallow=all\r\n    allow=gsm\r\n    allow=ulaw\r\n\r\n    [6002]\r\n    type=user\r\n    context=from-internal\r\n    host=dynamic\r\n    secret=6002\r\n    disallow=all\r\n    allow=gsm\r\n    allow=ulaw\r\n    ```  \r\n\r\n    `mv extensions.conf.sample extensions.conf`  \r\n\r\n    ```conf\r\n    [from-internal]\r\n    exten = 6001,1,Dial(PJSIP/6001,60)\r\n    exten = 6002,1,Dial(PJSIP/6002,60)\r\n\r\n    exten = 6001,1,Dial(SIP/6001,60)\r\n    exten = 6002,1,Dial(SIP/6002,60)\r\n    ```  \r\n\r\n    `mv pjsip.conf.sample pjsip.conf`  \r\n\r\n    ```conf\r\n    [port-udp]\r\n    type=transport\r\n    protocol=udp\r\n    bind=0.0.0.0:5060\r\n    external_media_address=x.x.x.x ; \u4f60\u7684\u516c\u5171 IP \u5730\u5740\r\n    external_signaling_address=x.x.x.x ; \u4f60\u7684\u516c\u5171 IP \u5730\u5740\r\n\r\n    [general]\r\n    extern_ip=x.x.x.x         ; \u4f60\u7684\u516c\u5171 IP \u5730\u5740\r\n    local_net=192.168.1.0/255.255.255.0  ; \u4f60\u7684\u672c\u5730\u7f51\u7edc\uff08\u4f8b\u5982\uff0c192.168.1.0/255.255.255.0\uff09\r\n\r\n    ; \u8bbe\u7f6e NAT \u9009\u9879\r\n    nat=force_rport,comedia\r\n    videosupport=yes\r\n\r\n    [6001]\r\n    type=endpoint\r\n    context=from-internal\r\n    disallow=all\r\n    allow=gsm\r\n    allow=ulaw\r\n    auth=6001\r\n    aors=6001\r\n\r\n    [6001]\r\n    type=auth\r\n    auth_type=userpass\r\n    password=userpass\r\n    username=6001\r\n\r\n    [6001]\r\n    type=aor\r\n    max_contacts=10\r\n\r\n    [6002]\r\n    type=endpoint\r\n    context=from-internal\r\n    disallow=all\r\n    allow=gsm\r\n    allow=ulaw\r\n    auth=6002\r\n    aors=6002\r\n\r\n    [6002]\r\n    type=auth\r\n    auth_type=userpass\r\n    password=userpass\r\n    username=6002\r\n\r\n    [6002]\r\n    type=aor\r\n    max_contacts=10\r\n    ```\r\n\r\n> [!WARNING]\r\n     1. \u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aefallow=gsm\u8981\u4e00\u81f4  \r\n\r\n\u3002", "top": 0, "createdAt": 1727510831, "style": "<style>.markdown-alert{padding:0.5rem 1rem;margin-bottom:1rem;border-left:.25em solid var(--borderColor-default,var(--color-border-default));}.markdown-alert .markdown-alert-title {display:flex;font-weight:var(--base-text-weight-medium,500);align-items:center;line-height:1;}.markdown-alert>:first-child {margin-top:0;}.markdown-alert>:last-child {margin-bottom:0;}</style><style>.markdown-alert.markdown-alert-note {border-left-color:var(--borderColor-accent-emphasis, var(--color-accent-emphasis));background-color:var(--color-accent-subtle);}.markdown-alert.markdown-alert-note .markdown-alert-title {color: var(--fgColor-accent,var(--color-accent-fg));}</style><style>.markdown-alert.markdown-alert-warning {border-left-color:var(--borderColor-attention-emphasis, var(--color-attention-emphasis));background-color:var(--color-attention-subtle);}.markdown-alert.markdown-alert-warning .markdown-alert-title {color: var(--fgColor-attention,var(--color-attention-fg));}</style>", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "createdDate": "2024-09-28", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/dotnet Connection to localhost on the Android emulator.html", "labels": ["documentation"], "postTitle": "dotnet Connection to localhost on the Android emulator", "postUrl": "post/dotnet%20Connection%20to%20localhost%20on%20the%20Android%20emulator.html", "postSourceUrl": "https://github.com/Abner1995/Abner1995.github.io/issues/5", "commentNum": 0, "wordCount": 250, "description": "![image](https://github.com/user-attachments/assets/056f795a-8efd-4327-a4fb-dfaf6de42404)\r\n![image](https://github.com/user-attachments/assets/c97fc5cd-c53c-463a-a9a5-ed4f355b591a)\r\n\u628a\u4ee3\u7801\u590d\u5236\u8fdb\u53bb\r\n`<binding protocol='http' bindingInformation='*:5086:*' />`\u3002", "top": 0, "createdAt": 1727840809, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "createdDate": "2024-10-02", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/test.html", "labels": ["question"], "postTitle": "test", "postUrl": "post/test.html", "postSourceUrl": "https://github.com/Abner1995/Abner1995.github.io/issues/6", "commentNum": 0, "wordCount": 4, "description": "test\u3002", "top": 0, "createdAt": 1728466847, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/articletoc.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/GmeekVercount.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "createdDate": "2024-10-09", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "question": "#d876e3", "wontfix": "#ffffff"}, "displayTitle": "\u5b50\u6b63\u535a\u5ba2", "faviconUrl": "https://avatars.githubusercontent.com/u/15809315?v=4", "ogImage": "https://avatars.githubusercontent.com/u/15809315?v=4", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://Abner1995.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}